using System;
using System.Threading.Tasks;
using System.Collections.Generic;
using System.Numerics;
using Nethereum.Hex.HexTypes;
using Nethereum.ABI.FunctionEncoding.Attributes;
using Nethereum.Web3;
using Nethereum.RPC.Eth.DTOs;
using Nethereum.Contracts.CQS;
using Nethereum.Contracts;
using System.Threading;

namespace NetmonSC.NetMon.ContractDefinition
{


    public partial class NetMonDeployment : NetMonDeploymentBase
    {
        public NetMonDeployment() : base(BYTECODE) { }
        public NetMonDeployment(string byteCode) : base(byteCode) { }
    }

    public class NetMonDeploymentBase : ContractDeploymentMessage
    {
        public static string BYTECODE = "608060405234801561001057600080fd5b506109cd806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063090e831f1461005c578063182d4c3f1461007a5780633735b3c61461009d578063985e3370146100be578063ec71bcef146100d1575b600080fd5b6100646100e4565b604051610071919061067d565b60405180910390f35b61008d610088366004610798565b6101e4565b6040519015158152602001610071565b6100b06100ab3660046107d5565b6102b4565b6040516100719291906107ee565b61008d6100cc366004610798565b610373565b61008d6100df366004610812565b6104a0565b60606000805480602002602001604051908101604052809291908181526020016000905b828210156101db578382906000526020600020906002020160405180604001604052908160008201805461013b90610869565b80601f016020809104026020016040519081016040528092919081815260200182805461016790610869565b80156101b45780601f10610189576101008083540402835291602001916101b4565b820191906000526020600020905b81548152906001019060200180831161019757829003601f168201915b505050918352505060019182015460ff161515602091820152918352929092019101610108565b50505050905090565b6000805b6000548110156102ab578260405160200161020391906108a3565b604051602081830303815290604052805190602001206000828154811061022c5761022c6108bf565b906000526020600020906002020160000160405160200161024d91906108d5565b6040516020818303038152906040528051906020012003610299576000818154811061027b5761027b6108bf565b600091825260209091206001600290920201015460ff169392505050565b806102a381610970565b9150506101e8565b50600092915050565b600081815481106102c457600080fd5b90600052602060002090600202016000915090508060000180546102e790610869565b80601f016020809104026020016040519081016040528092919081815260200182805461031390610869565b80156103605780601f1061033557610100808354040283529160200191610360565b820191906000526020600020905b81548152906001019060200180831161034357829003601f168201915b5050506001909301549192505060ff1682565b60408051808201909152606081526000602082018190529060005b60005481101561042a57836040516020016103a991906108a3565b60405160208183030381529060405280519060200120600082815481106103d2576103d26108bf565b90600052602060002090600202016000016040516020016103f391906108d5565b6040516020818303038152906040528051906020012003610418575060009392505050565b8061042281610970565b91505061038e565b8382526000602080840182905281546001810183559180528351805185936002027f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563019261047c928492910190610588565b50602091909101516001918201805460ff1916911515919091179055949350505050565b6000805b60005481101561057c57836040516020016104bf91906108a3565b60405160208183030381529060405280519060200120600082815481106104e8576104e86108bf565b906000526020600020906002020160000160405160200161050991906108d5565b604051602081830303815290604052805190602001200361056a578260008281548110610538576105386108bf565b906000526020600020906002020160010160006101000a81548160ff0219169083151502179055506001915050610582565b8061057481610970565b9150506104a4565b60009150505b92915050565b82805461059490610869565b90600052602060002090601f0160209004810192826105b657600085556105fc565b82601f106105cf57805160ff19168380011785556105fc565b828001600101855582156105fc579182015b828111156105fc5782518255916020019190600101906105e1565b5061060892915061060c565b5090565b5b80821115610608576000815560010161060d565b60005b8381101561063c578181015183820152602001610624565b8381111561064b576000848401525b50505050565b60008151808452610669816020860160208601610621565b601f01601f19169290920160200192915050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156106e757888303603f19018552815180518785526106c888860182610651565b91890151151594890194909452948701949250908601906001016106a4565b509098975050505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261071c57600080fd5b813567ffffffffffffffff80821115610737576107376106f5565b604051601f8301601f19908116603f0116810190828211818310171561075f5761075f6106f5565b8160405283815286602085880101111561077857600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000602082840312156107aa57600080fd5b813567ffffffffffffffff8111156107c157600080fd5b6107cd8482850161070b565b949350505050565b6000602082840312156107e757600080fd5b5035919050565b6040815260006108016040830185610651565b905082151560208301529392505050565b6000806040838503121561082557600080fd5b823567ffffffffffffffff81111561083c57600080fd5b6108488582860161070b565b9250506020830135801515811461085e57600080fd5b809150509250929050565b600181811c9082168061087d57607f821691505b60208210810361089d57634e487b7160e01b600052602260045260246000fd5b50919050565b600082516108b5818460208701610621565b9190910192915050565b634e487b7160e01b600052603260045260246000fd5b600080835481600182811c9150808316806108f157607f831692505b6020808410820361091057634e487b7160e01b86526022600452602486fd5b818015610924576001811461093557610962565b60ff19861689528489019650610962565b60008a81526020902060005b8681101561095a5781548b820152908501908301610941565b505084890196505b509498975050505050505050565b60006001820161099057634e487b7160e01b600052601160045260246000fd5b506001019056fea264697066735822122048256bdadfec177b955ad4d518345be472afec4f8d728c8f573b7942875c087264736f6c634300080d0033";
        public NetMonDeploymentBase() : base(BYTECODE) { }
        public NetMonDeploymentBase(string byteCode) : base(byteCode) { }

    }

    public partial class AddHostFunction : AddHostFunctionBase { }

    [Function("addHost", "bool")]
    public class AddHostFunctionBase : FunctionMessage
    {
        [Parameter("string", "hostname", 1)]
        public virtual string Hostname { get; set; }
    }

    public partial class GetAllHostsStateFunction : GetAllHostsStateFunctionBase { }

    [Function("getAllHostsState", typeof(GetAllHostsStateOutputDTO))]
    public class GetAllHostsStateFunctionBase : FunctionMessage
    {

    }

    public partial class GetHostStateFunction : GetHostStateFunctionBase { }

    [Function("getHostState", "bool")]
    public class GetHostStateFunctionBase : FunctionMessage
    {
        [Parameter("string", "hostname", 1)]
        public virtual string Hostname { get; set; }
    }

    public partial class HostsFunction : HostsFunctionBase { }

    [Function("hosts", typeof(HostsOutputDTO))]
    public class HostsFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class SetHostStateFunction : SetHostStateFunctionBase { }

    [Function("setHostState", "bool")]
    public class SetHostStateFunctionBase : FunctionMessage
    {
        [Parameter("string", "hostname", 1)]
        public virtual string Hostname { get; set; }
        [Parameter("bool", "hostState", 2)]
        public virtual bool HostState { get; set; }
    }



    public partial class GetAllHostsStateOutputDTO : GetAllHostsStateOutputDTOBase { }

    [FunctionOutput]
    public class GetAllHostsStateOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("tuple[]", "", 1)]
        public virtual List<MonData> ReturnValue1 { get; set; }
    }

    public partial class GetHostStateOutputDTO : GetHostStateOutputDTOBase { }

    [FunctionOutput]
    public class GetHostStateOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("bool", "", 1)]
        public virtual bool ReturnValue1 { get; set; }
    }

    public partial class HostsOutputDTO : HostsOutputDTOBase { }

    [FunctionOutput]
    public class HostsOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("string", "hostname", 1)]
        public virtual string Hostname { get; set; }
        [Parameter("bool", "state", 2)]
        public virtual bool State { get; set; }
    }


}
